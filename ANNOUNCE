To: comp.lang.scheme
Subject: [announce] Infix version 1.0.0, an infix to prefix transformer

			   Infix
			   =====


Overview
--------

This package is a  distribution of libraries for R6RS Scheme
implementations; it provides  the INFIX macro which converts
the  traditional  infix  notation  for  expressions  to  the
equivalent Scheme's prefix notation.

  The library has no dependencies; the implementation itself
is a single, definitive, kill'em all DEFINE-SYNTAX form.

  The library  supports Ikarus, Larceny,  Mosh, Petite Chez,
PLT Scheme, Vicare and Ypsilon.

  Detailed informations on usage are in the README file.


Download
--------

The last revision of this package can be downloaded from:

     <http://github.com/marcomaggi/nausicaa/downloads>


License
-------

Copyright (c) 2010 Marco Maggi <marco.maggi-ipsu@poste.it>
Copyright (c) 2005-2008 Dominique Boucher
Copyright (C) 2000 The Free Software Foundation.

This  program  is free  software:  you  can redistribute  it
and/or modify it  under the terms of the  GNU General Public
License as published by the Free Software Foundation, either
version  3 of  the License,  or (at  your option)  any later
version.

This  program is  distributed in  the hope  that it  will be
useful, but  WITHOUT ANY WARRANTY; without  even the implied
warranty  of  MERCHANTABILITY or  FITNESS  FOR A  PARTICULAR
PURPOSE.   See  the  GNU  General Public  License  for  more
details.

You should  have received a  copy of the GNU  General Public
License   along   with    this   program.    If   not,   see
<http://www.gnu.org/licenses/>.


Credits
-------

The library is the work  of Marco Maggi, the code is derived
from  the Nausicaa/Scheme  distribution  of libraries.   The
only way  to regenerate the parser  table is to  built it in
Nausicaa/Scheme and copy it into the library here.

  The parser table and the general concept of the package is
a rework of Guile-Arith by Ian Grant.

  The  parser  driver  is   from  the  Lalr-scm  package  by
Dominique Boucher, the parser  table is also generated using
Lalr-scm.


### end of file
# Local Variables:
# mode: text
# fill-column: 60
# paragraph-start: "*"
# End:
